(********************************************************************
 * Program: Visualization
 * Author: Markthaler
 * Created: 30.03.2022
 * Info: Calculation of data series for visualization in LineCharts + calculation of conversion and yield
 ********************************************************************)


PROGRAM _INIT
	//Initialization of the fixed bed inlet and outlet
	g_i_z_axis_InOut_HP[0] := 0;
	g_i_z_axis_InOut_HP[1] := 9;
	g_i_z_axis_InOut_HP[2] := 289;
	g_i_z_axis_InOut_FB[0] := 0;
	g_i_z_axis_InOut_FB[1] := 3;
	g_i_z_axis_InOut_FB[2] := 333;
	
	//Initialization of the array to map different temperature profiles
	LOOP l_i = 0 TO 302 DO
		g_r_Tprofile_HP_sin[l_i] := G_R_T_SIN;
		g_r_Tprofile_HP_temp[l_i] := 0;
		g_r_Tprofile_HP_crit[l_i] := 0;
	ENDLOOP
	
	LOOP l_i = 0 TO 337 DO
		g_r_Tprofile_FB_sin[l_i] := G_R_T_SIN;
		g_r_Tprofile_FB_temp[l_i] := 0;
		g_r_Tprofile_FB_crit[l_i] := 0;
	ENDLOOP
END_PROGRAM

PROGRAM _CYCLIC
	//Assignment of the measured temperature values in the heat pipe reactor to the temperature profile 
	g_r_Tprofile_HP[0] := g_temp_TIR[5].r_ist;					//Temperature above fixed bed
	LOOP l_i = 0 TO 9 DO															//l_r_T_profile_HP[0] at z = -9 mm
		g_r_Tprofile_HP[L_I_Z_AXIS_HP[l_i]+9] := g_temp_TIR[l_i+9].r_ist;			//Top measurement value in the multipoint thermocouple = TIR9
	ENDLOOP
	
	//Assignment of the measured temperature values in the fixed bed reactor to the temperature profile 
	LOOP l_i = 0 TO 9 DO															//l_r_T_profile_HP[0] at z = -3 mm
		g_r_Tprofile_FB[L_I_Z_AXIS_FB[l_i]+3] := g_temp_TIR[l_i+27].r_ist;			//Top measurement value in the multipoint thermocouple = TIR27
	ENDLOOP
	
	//Section-wise: Linear interpolation of values between measurements (heat pipe reactor)
	LOOP l_i_2 = 0 TO 9 DO
		IF l_i_2 = 0 THEN
			l_i_temp_0 := 0;	
		ELSE
			l_i_temp_0 := L_I_Z_AXIS_HP[l_i_2-1]+9;	
		ENDIF
		l_i_temp_1 := L_I_Z_AXIS_HP[l_i_2]+9;
		LOOP l_i = (l_i_temp_0+1) TO (l_i_temp_1-1) DO
			g_r_Tprofile_HP[l_i] = g_r_Tprofile_HP[l_i_temp_0] + REAL(l_i - l_i_temp_0) * (g_r_Tprofile_HP[l_i_temp_1] - g_r_Tprofile_HP[l_i_temp_0]) / REAL(l_i_temp_1 - l_i_temp_0); 
		ENDLOOP
	ENDLOOP
	
	//Section-wise: Linear interpolation of values between measurements (fixed bed reactor)
	LOOP l_i_2 = 0 TO 9 DO
		IF l_i_2 = 0 THEN
			l_i_temp_0 := 0;	
		ELSE
			l_i_temp_0 := L_I_Z_AXIS_FB[l_i_2-1]+3;	
		ENDIF
		l_i_temp_1 := L_I_Z_AXIS_FB[l_i_2]+3;
		LOOP l_i = (l_i_temp_0+1) TO (l_i_temp_1-1) DO
			g_r_Tprofile_FB[l_i] = g_r_Tprofile_FB[l_i_temp_0] + REAL(l_i - l_i_temp_0) * (g_r_Tprofile_FB[l_i_temp_1] - g_r_Tprofile_FB[l_i_temp_0]) / REAL(l_i_temp_1 - l_i_temp_0); 
		ENDLOOP
	ENDLOOP
	
	//Overwrite the temporary storage of a temperature profile
	IF g_b_Tprofile_to_temp[0] THEN		//Heat pipe reactor
		LOOP l_i = 0 TO 302 DO
			g_r_Tprofile_HP_temp[l_i] := g_r_Tprofile_HP[l_i];
		ENDLOOP
	ENDIF
	IF g_b_Tprofile_to_temp[1] THEN		//Fixed bed reactor
		LOOP l_i = 0 TO 337 DO
			g_r_Tprofile_FB_temp[l_i] := g_r_Tprofile_FB[l_i];
		ENDLOOP
	ENDIF
	
	//Update the critical temperature
	LOOP l_i = 0 TO 302 DO
		g_r_Tprofile_HP_crit[l_i] := g_r_T_crit[0];
	ENDLOOP
	LOOP l_i = 0 TO 337 DO
		g_r_Tprofile_FB_crit[l_i] := g_r_T_crit[1];
	ENDLOOP
		
	//Calculation of molar flows in the measured product gas
	l_r_nf_out_react[2] := g_r_y_dry[2] * (4 * g_r_nf_in_react[2] + g_r_nf_in_react[0]) / (1 - g_r_y_dry[1] + 3 * g_r_y_dry[2]);
	l_r_nf_out_react[0] := g_r_y_dry[0] * l_r_nf_out_react[2] / g_r_y_dry[2]; 
	l_r_nf_out_react[1] := g_r_y_dry[1] * l_r_nf_out_react[2] / g_r_y_dry[2];
	
	//Equilibrium conversion of H2
	IF g_b_valid_GAL[1] THEN			//In the heat pipe reactor
		//g_r_X_H2_eq[0] := theta1 + theta2 * g_temp_TIR[18] + theta3 * g_pres_PIR[3] + theta3 * 	g_r_y_in_react[0] + ...
		g_r_X_H2[0] := (g_r_nf_in_react[0] - l_r_nf_out_react[0]) / g_r_nf_in_react[0] * 100;			
		g_r_Y_CH4_CO2[0] := (l_r_nf_out_react[2] - g_r_nf_in_react[2]) / g_r_nf_in_react[1] * 100;
	ELSE
		IF g_b_valid_GAL[2] THEN			//In the fixed bed reactor
			//g_r_X_H2_eq[1] := theta1 + theta2 * g_temp_TIR[36]  + theta3 * g_pres_PIR[6] + theta3 * 	g_r_y_in_react[0] + ...
			g_r_X_H2[1] := (g_r_nf_in_react[0] - l_r_nf_out_react[0]) / g_r_nf_in_react[0] * 100;
			g_r_Y_CH4_CO2[1] := (l_r_nf_out_react[2] - g_r_nf_in_react[2]) / g_r_nf_in_react[1] * 100;
		ENDIF
	ENDIF
	
	IF g_b_valid_GAL[1] THEN			//In the heat pipe reactor
		g_r_strompreis_akt_extern := 0;
		g_r_strompreis_pred_extern := 0;
	ELSE
	ENDIF

END_PROGRAM

PROGRAM _EXIT
	(* Insert code here *)
	 
END_PROGRAM

